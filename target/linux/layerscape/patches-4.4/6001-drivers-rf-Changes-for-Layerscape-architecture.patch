From f6481844d53be5dbf8c5808b1bce5fb717471c4d Mon Sep 17 00:00:00 2001
From: Rajesh Bhagat <rajesh.bhagat@nxp.com>
Date: Fri, 20 Jan 2017 14:08:04 +0530
Subject: [PATCH 06/26] drivers:rf: Changes for Layerscape architecture

Signed-off-by: Rajesh Bhagat <rajesh.bhagat@nxp.com>
---
 drivers/Makefile             |  2 +-
 drivers/rf/Kconfig           |  4 ++--
 drivers/rf/core/rf_channel.c |  3 +++
 drivers/rf/core/rfdev.c      | 34 +++++++++++++++++++++++++++++++++-
 drivers/rf/phy/Makefile      |  2 ++
 5 files changed, 41 insertions(+), 4 deletions(-)

diff --git a/drivers/Makefile b/drivers/Makefile
index f54c16c..839fbad 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -65,6 +65,7 @@ obj-$(CONFIG_FB_INTEL)          += video/fbdev/intelfb/
 obj-$(CONFIG_PARPORT)		+= parport/
 obj-$(CONFIG_NVM)		+= lightnvm/
 obj-y				+= base/ block/ misc/ mfd/ nfc/
+obj-$(CONFIG_RFDEVICES)		+= rf/
 obj-$(CONFIG_LIBNVDIMM)		+= nvdimm/
 obj-$(CONFIG_DMA_SHARED_BUFFER) += dma-buf/
 obj-$(CONFIG_NUBUS)		+= nubus/
@@ -173,4 +174,3 @@ obj-$(CONFIG_STM)		+= hwtracing/stm/
 obj-$(CONFIG_ANDROID)		+= android/
 obj-$(CONFIG_NVMEM)		+= nvmem/
 obj-$(CONFIG_FPGA)		+= fpga/
-obj-$(CONFIG_RFDEVICES)		+= rf/
diff --git a/drivers/rf/Kconfig b/drivers/rf/Kconfig
index c86cd91..b12e4b9 100644
--- a/drivers/rf/Kconfig
+++ b/drivers/rf/Kconfig
@@ -24,7 +24,7 @@ config RFDEV_CORE
 	default y
 	bool
 config FSL_AIC
-	default y
+	default n
 	bool "Freescale Antenna Interface Controller (AIC)"
 	---help---
 	Freescale AIC controller (Antenna Interface Controller) is found
@@ -32,7 +32,7 @@ config FSL_AIC
 	RF PHYs can be connected and operated simultaneously.
 
 config ADI9361
-	default y
+	default n
 	bool "ADI 9361 RF PHY"
 	---help---
 	ADI9361 RF phy driver.
diff --git a/drivers/rf/core/rf_channel.c b/drivers/rf/core/rf_channel.c
index eb23fc5..780c30d 100644
--- a/drivers/rf/core/rf_channel.c
+++ b/drivers/rf/core/rf_channel.c
@@ -25,6 +25,9 @@
 #include <linux/types.h>
 #include <linux/list.h>
 #include <linux/bitops.h>
+#ifdef CONFIG_ARCH_LAYERSCAPE
+#include <linux/slab.h>
+#endif
 #include <linux/rfdev.h>
 #include <linux/rfdev_ioctl.h>
 #include <linux/rf_channel.h>
diff --git a/drivers/rf/core/rfdev.c b/drivers/rf/core/rfdev.c
index 402521e..de6846b 100644
--- a/drivers/rf/core/rfdev.c
+++ b/drivers/rf/core/rfdev.c
@@ -28,6 +28,9 @@
 #include <linux/cdev.h>
 #include <linux/uaccess.h>
 #include <linux/signal.h>
+#ifdef CONFIG_ARCH_LAYERSCAPE
+#include <linux/slab.h>
+#endif
 #include <linux/rfdev_ioctl.h>
 #include <linux/rf_channel.h>
 
@@ -47,14 +50,23 @@ static int rf_attach_phy(struct rf_ctrl_dev *rf_dev, struct rf_phy_dev *phy);
 static int rf_open(struct inode *inode, struct file *filep);
 static int rf_release(struct inode *inode, struct file *filep);
 static ssize_t rf_read(struct file *, char __user *, size_t, loff_t *);
+#ifndef CONFIG_ARCH_LAYERSCAPE
 static int rf_ioctl(struct inode *, struct file *, unsigned int,
 		unsigned long);
+#else
+static long rf_ioctl(struct file *, unsigned int,
+		unsigned long);
+#endif
 
 const static struct file_operations rf_fops = {
 	.open 	= rf_open,
 	.release = rf_release,
 	.read 	= rf_read,
+#ifndef CONFIG_ARCH_LAYERSCAPE
 	.ioctl 	= rf_ioctl,
+#else
+	.unlocked_ioctl = rf_ioctl,
+#endif
 };
 
 struct rf_ctrl_dev *allocate_rf_ctrl_dev(size_t priv_size,
@@ -569,6 +581,7 @@ int rf_unregister_event_handler(struct rf_ctrl_dev *rf_dev,
 	return rc;
 }
 
+#ifdef CONFIG_FSL_AIC
 static int rf_init_master_slave(struct rf_ctrl_dev *rf_dev,
 	struct rf_phy_dev *phy)
 {
@@ -601,9 +614,17 @@ static int rf_init_master_slave(struct rf_ctrl_dev *rf_dev,
 out:
 	return rc;
 }
-
+#else
+static int rf_init_master_slave(struct rf_ctrl_dev *rf_dev,
+	struct rf_phy_dev *phy) { return 0; }
+#endif
+#ifndef CONFIG_ARCH_LAYERSCAPE
 static int rf_ioctl(struct inode *inode, struct file *filep,
 		unsigned int cmd, unsigned long arg)
+#else
+static long rf_ioctl(struct file *filep,
+		unsigned int cmd, unsigned long arg)
+#endif
 {
 	struct rf_ctrl_dev *rf_dev;
 	struct rf_phy_dev *phy;
@@ -632,7 +653,12 @@ static int rf_ioctl(struct inode *inode, struct file *filep,
 	rf_dev = filep->private_data;
 	phy = rf_dev->phy;
 
+#ifndef CONFIG_ARCH_LAYERSCAPE
 	mutex_lock_interruptible(&rf_dev->lock);
+#else
+	if(mutex_lock_interruptible(&rf_dev->lock))
+		return rc;
+#endif
 	switch (cmd) {
 
 	case RIF_DEV_INIT:
@@ -1182,6 +1208,7 @@ out:
 ** Function: rf_update_master_slave_status()
 ** Mark rf lane status
 */
+#ifdef CONFIG_FSL_AIC
 int rf_update_master_slave_status(void)
 {
 	int rc = 0;
@@ -1208,6 +1235,9 @@ int rf_update_master_slave_status(void)
 
 	return rc;
 }
+#else
+int rf_update_master_slave_status(void) { return 0;}
+#endif
 EXPORT_SYMBOL(rf_update_master_slave_status);
 
 static int __init rf_init(void)
@@ -1244,6 +1274,8 @@ static void __exit rf_cleanup(void)
 	}
 }
 
+#ifndef CONFIG_ARCH_LAYERSCAPE
 MODULE_LICENSE("GPL v2");
+#endif
 module_init(rf_init);
 module_exit(rf_cleanup);
diff --git a/drivers/rf/phy/Makefile b/drivers/rf/phy/Makefile
index 74fe010..f134e09 100644
--- a/drivers/rf/phy/Makefile
+++ b/drivers/rf/phy/Makefile
@@ -1,3 +1,5 @@
 
 obj-$(CONFIG_ADI9361)		+= ad9361.o
+ifeq ($(CONFIG_ARCH_LAYERSCAPE),)
 obj-y				+= tdd_int.o
+endif
-- 
2.7.4

